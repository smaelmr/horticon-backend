// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(MySqlContext))]
    [Migration("20181026025420_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Core.Entities.Cycles.Cycle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Banca");

                    b.Property<DateTime>("Colhido");

                    b.Property<string>("Entregue");

                    b.Property<DateTime>("FiftyMm");

                    b.Property<int>("Lot")
                        .HasColumnName("Lot");

                    b.Property<DateTime>("Semeado");

                    b.Property<DateTime>("SeventyFiveMm");

                    b.Property<int>("Sytem")
                        .HasColumnName("System");

                    b.HasKey("Id");

                    b.ToTable("Cycle");
                });

            modelBuilder.Entity("Core.Entities.Pesticides.Pesticide", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ActivePrinciple");

                    b.Property<string>("CommercialName");

                    b.Property<DateTime>("Date");

                    b.Property<string>("DoseL");

                    b.Property<DateTime>("Hour");

                    b.Property<string>("Lack");

                    b.Property<int>("Lot")
                        .HasColumnName("Lot");

                    b.Property<string>("PesticideType");

                    b.Property<int>("Sytem")
                        .HasColumnName("System");

                    b.HasKey("Id");

                    b.ToTable("Pesticide");
                });

            modelBuilder.Entity("Core.Entities.Plantations.Planting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Brand")
                        .HasColumnName("SeedBrand");

                    b.Property<int>("Lot")
                        .HasColumnName("Lot");

                    b.Property<int>("Quantity")
                        .HasColumnName("SeedBrand");

                    b.Property<int>("Sytem")
                        .HasColumnName("System");

                    b.Property<int>("Type")
                        .HasColumnName("SeedType");

                    b.Property<int>("Variety")
                        .HasColumnName("SeedVariety");

                    b.HasKey("Id");

                    b.ToTable("Planting");
                });

            modelBuilder.Entity("Core.Entities.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Lot");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("Name");

                    b.Property<int>("Sytem");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Core.Entities.WashingPipes.WashingPipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DayHour");

                    b.Property<int>("Lot")
                        .HasColumnName("Lot");

                    b.Property<int>("Mode");

                    b.Property<int>("Sytem")
                        .HasColumnName("System");

                    b.Property<int>("UsedProds");

                    b.HasKey("Id");

                    b.ToTable("WashingPipe");
                });

            modelBuilder.Entity("Core.Entities.WaterChanges.WaterChange", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("AdditiveDose");

                    b.Property<int>("AdditiveType");

                    b.Property<DateTime>("DayHour");

                    b.Property<int>("Lot")
                        .HasColumnName("Lot");

                    b.Property<decimal>("Receita");

                    b.Property<int>("Sytem")
                        .HasColumnName("System");

                    b.HasKey("Id");

                    b.ToTable("WaterChange");
                });

            modelBuilder.Entity("Core.Entities.WaterControls.WaterControl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("CDE");

                    b.Property<decimal>("CelsiusDegree");

                    b.Property<DateTime>("DayHour");

                    b.Property<int>("Lot")
                        .HasColumnName("Lot");

                    b.Property<decimal>("PH");

                    b.Property<int>("Sytem")
                        .HasColumnName("System");

                    b.HasKey("Id");

                    b.ToTable("WaterControl");
                });
#pragma warning restore 612, 618
        }
    }
}
